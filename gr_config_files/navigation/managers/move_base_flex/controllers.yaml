controllers:
  - name: 'trajectory_planner'
    type: 'base_local_planner/TrajectoryPlannerROS'
  - name: 'dwa_planner'
    type: 'dwa_local_planner/DWAPlannerROS'
  - name: 'eband'
    type: 'eband_local_planner/EBandPlannerROS'

eband:
  Ctrl_Rate: 20.0
  bubble_velocity_multiplier: 2.0
  costmap_weight: 10.0
  differential_drive: true
  disallow_hysteresis: false
  eband_equilibrium_approx_max_recursion_depth: 3
  eband_equilibrium_relative_overshoot: 0.75
  eband_external_force_gain: 3.0
  eband_internal_force_gain: 2.0
  eband_min_relative_overlap: 0.7
  eband_significant_force_lower_bound: 0.15
  eband_tiny_bubble_distance: 0.01
  eband_tiny_bubble_expansion: 0.01
  in_place_trans_vel: 0.0
  k_damp: 3.5
  k_prop: 4.0
  marker_lifetime: 0.5
  max_acceleration: 0.2
  max_rotational_acceleration: 0.3
  max_translational_acceleration: 0.4
  # Lower values for testing with the actual robot.
  max_vel_lin: 1.1 #0.5 #1.45
  max_vel_th: 1.2 #0.5 #2.0
  min_in_place_vel_th: 0.05
  min_vel_lin: 0.0
  min_vel_th: 0.0
  num_iterations_eband_optimization: 4
  rot_stopped_vel: 0.01
  rotation_correction_threshold: 0.5
  rotation_threshold_multiplier: 1.0
  trans_stopped_vel: 0.01
  virtual_mass: 100.0
  xy_goal_tolerance: 0.2
  yaw_goal_tolerance: 0.2

dwa_planner:
  acc_lim_x: 1.0
  acc_limit_trans: 0.5
  acc_lim_y: 0.2
  acc_lim_theta: 2.0 #default: 2.0
  min_vel_x: 0.0
  max_vel_x: 0.50
  min_trans_vel: 0.05
  max_trans_vel: 0.50
  min_vel_y: 0.0
  max_vel_y: 0.35 #default:0.35
  max_rot_vel: 0.5
  min_rot_vel: 0.1
  rot_stopped_vel: 0.01 #Below what maximum velocity we consider the robot to be stopped in translation", 0.1)
  trans_stopped_vel: 0.01 #"Below what maximum rotation velocity we consider the robot to be stopped in rotation", 0.1)

  vx_samples: 10
  vy_samples: 10
  vth_samples: 10

  yaw_goal_tolerance: 0.3
  #default:0.1 -> with this value the robot sometimes has troubles achieving the goal, due to low tolerance
  xy_goal_tolerance: 0.15
  # if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so.
  latch_xy_goal_tolerance: true
  sim_time: 3.7
  path_distance_bias: 32.0 #default:32, previous:5
  goal_distance_bias: 24.0 #default:24, previous:9
  occdist_scale: 0.5 #default:0.01

  oscillation_reset_dist: 0.15
  oscillation_timeout: 2.0
  forward_point_distance: 1.0

  prune_plan: true
  holonomic_robot: true

trajectory_planner:
  holonomic_robot: false

mbf_tolerance_check: true
dist_tolerance: 0.2
angle_tolerance: 1.5
